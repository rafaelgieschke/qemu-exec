#!/bin/sh -eu
dir="$(dirname -- "$(readlink -f "$0")")"

: "${vm:=qemu-system-x86_64}"
: "${vm_is_lkvm="$(test "$(basename -- "${vm##* }")" = "lkvm" && echo 1)"}"
: "${kernel:="$dir/kernel"}"
: "${initrd:="$dir/initrd"}"
# https://www.qemu.org/docs/master/system/mux-chardev.html
: "${serial=mon:stdio}"
: "${cmdline="quiet${serial:+ console=ttyS0}"}"
: "${setpath=1}"

quote() {
  printf '%s\n' "$1" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/'/"
}

get_cmdline() {
  for arg; do shift && test "$arg" = "--" && break; done
  if test "$#" = "0"; then
    set -- "${SHELL:-sh}"
  fi
  if test "$setpath"; then
    set -- env "PATH=$PATH" "$@"
  fi
  set -- "$poweroff_cmd" "$working_dir" "$@"
  for arg; do
    case "$arg" in
    *\"*) return ;;
    esac
  done
  if test "$(($# + 2))" -gt "$max_cmdline_args"; then return; fi
  # Use == as delimiter to command-line parameters not recognized
  # by the kernel before the -- delimiter, which are also passed to init.
  # A potential == before the -- delimiter would be passed as environment
  # variable ("=") to init and can thus be distinguished.
  # Additionally, some firmware (e.g., OVMF) will append further options to
  # the kernel command line. Therefore, add the number of passed arguments
  # after the ==.
  set -- "${cmdline}-- ==$(printf ' "%s"' "$#" "$@")"
  if test "$(printf "%s" "$1" | wc -c)" -gt "$max_cmdline_size"; then return; fi
  printf "%s\n" "$1"
}

get_script() {
  for arg; do shift && test "$arg" = "--" && break; done
  quoted="cd $(quote "$working_dir") && exec"
  for arg; do
    quoted="$quoted $(quote "$arg")"
  done
  printf "%s\n" "$quoted"
}

if ! test -f "$dir/kernel" || ! test -f "$dir/initrd"; then
  "$dir/build"
fi

poweroff_cmd="poweroff"
max_cmdline_size=2047
# See Linux kernels's INIT_ENV_ARG_LIMIT
max_cmdline_args=32

if test "$cmdline"; then
  cmdline="$cmdline "
fi

if test "$vm_is_lkvm"; then
  poweroff_cmd="reboot"
  # lkvm sets some additional command-line parameters, some of which
  # are not recognized by the kernel and passed to init.
  max_cmdline_size=1023
  max_cmdline_args=16
fi

working_dir="$PWD"
cmdline="$(get_cmdline "$@")"

tmp_script=""
if ! test "$cmdline"; then
  tmp_script="$(mktemp)"
  get_script "$@" >"$tmp_script"
  working_dir="/"
  cmdline="$(get_cmdline "--" "/proc/self/exe" "$tmp_script")"
  if ! test "$cmdline"; then exit 1; fi
fi

i=0
for arg; do
  if test "$i" = "0"; then set --; fi
  if test "$arg" = "--"; then break; fi
  set -- "$@" "$arg"
  : "$((i += 1))"
done

if test "$vm_is_lkvm"; then
  exec $vm run \
    --kernel "$kernel" --initrd "$initrd" \
    --params "$cmdline" \
    --9p /,mnt \
    --rng \
    -m 512 \
    "$@"
else
  exec $vm -M q35 \
    -kernel "$kernel" -initrd "$initrd" \
    -append "$cmdline" \
    -virtfs local,path=/,mount_tag=mnt,security_model=none,multidevs=remap \
    ${serial:+-serial "$serial" -display none -vga none} \
    -device virtio-rng-pci \
    -m 512M \
    "$@"
fi
